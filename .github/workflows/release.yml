name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Install OTP and Elixir
        uses: actions/setup-elixir@v1
        with:
          otp-version: 22.3.4.6
          elixir-version: 1.10.4
          experimental-otp: true
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.3
      #- name: Retrieve Mix Dependencies Cache (uncompiled)
      #  uses: actions/cache@v2
      #  id: mix-cache # used to check if we can skip `mix deps.get`
      #  with:
      #    path: deps
      #    key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      #    restore-keys: |
      #      ${{ runner.os }}-mix-
      #- name: Retrieve Build Cache (compiled)
      #  uses: actions/cache@v2
      #  with:
      #    path: _build
      #    key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      #    restore-keys: |
      #      ${{ runner.os }}-build-
      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only prod
      - name: Compile Web Assets
        run: |
          npm install --prefix ./assets
          npm run deploy --prefix ./assets
          mix phx.digest
        env:
          MIX_ENV: prod
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      - name: mix release
        run: |
          mix release
        env:
          MIX_ENV: prod
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      - name: Compress files
        uses: master-atul/tar-action@v1.0.2
        with:
          command: c
          cwd: ./_build/prod/rel
          files: |
            ./open890
          outPath: open890-linux-x64-${{ steps.vars.outputs.tag }}.tar.gz
      # - name: package release
      #   run: |
      #     cd _build/prod/rel
      #     tar zcvf ./open890-${{ steps.vars.outputs.tag }}.tgz open890
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ endsWith(github.ref, '-pre') }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: open890-linux-x64-${{ steps.cars.outputs.tag }}.tgz
          asset_name: open890
          asset_content_type: application/octet-stream

