name: Elixir CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Install OTP and Elixir
        uses: actions/setup-elixir@v1
        with:
          otp-version: 22.3.4.6
          elixir-version: 1.10.4
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.3
      - name: Retrieve Mix Dependencies Cache (uncompiled)
        uses: actions/cache@v2
        id: mix-cache # used to check if we can skip `mix deps.get`
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Retrieve Build Cache (compiled)
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Compile
        run: |
          mix clean
          mix compile
        env:
          MIX_ENV: test
      #- name: Credo + Sobelow
      #  run: |
      #    mix credo suggest --mute-exit-status
      #    mix sobelow --ignore Config.CSP,Config.HTTPS
      #  env:
      #    MIX_ENV: test
      - name: Prepare Release
        run: |
          sudo apt -y install zstd
          npm install --prefix ./assets
          npm run deploy --prefix ./assets
          mix phx.digest
          mix release
        env:
          MIX_ENV: prod
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      - name: Publish Release
        run: |
          echo "Publish release here"
